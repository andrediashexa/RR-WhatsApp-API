zabbix_export:
  version: '7.0'
  media_types:
    - name: WhatsApp-RR
      type: WEBHOOK
      parameters:
        - name: Message
          value: '{ALERT.SUBJECT} {ALERT.MESSAGE}'
        - name: Server
          value: 'http://localhost:3001'
        - name: To
          value: '{ALERT.SENDTO}'
      script: |
        var request = new HttpRequest();
        var params = JSON.parse(value); // 'value' cont√©m os par√¢metros de entrada do Zabbix
        
        var url = params.Server + '/api/send';
        
        var postData = {
            recipients: params.To, // Destinat√°rio (usu√°rio/grupo)
            message: params.Message // Mensagem do alerta
        };
        
        request.addHeader('Content-Type: application/json');
        
        var result = request.post(url, JSON.stringify(postData));
        
        if (request.getStatus() !== 200) {
            throw 'Failed to send WhatsApp message. Status: ' + request.getStatus();
        }
        
        return 'Message sent successfully: ' + result;
      timeout: 10s
      process_tags: 'YES'
      message_templates:
        - event_source: TRIGGERS
          operation_mode: PROBLEM
          subject: '‚ùå *{HOST.NAME}*'
          message: |
            {EVENT.NAME}
            {ITEM.NAME1} ({ITEM.VALUE1})
            
            üîó {HOST.IP}
            ‚ÑπÔ∏è *{EVENT.SEVERITY}*
        - event_source: TRIGGERS
          operation_mode: RECOVERY
          subject: '‚úÖ *{HOST.NAME}*'
          message: |
            
            {EVENT.NAME}
            {ITEM.NAME1} ({ITEM.VALUE1})
            
            üîó {HOST.IP}
            ‚è∞ Dura√ß√£o: {EVENT.AGE}
        - event_source: TRIGGERS
          operation_mode: UPDATE
          subject: '*{USER.FULLNAME}*:'
          message: |
            üí¨ <i>{EVENT.UPDATE.MESSAGE}</i>
            
            üö® *{HOST.NAME}*
            ‚ö†Ô∏è {EVENT.NAME}
            
            üîó Host: {HOST.IP}
            üìä Status atual: *{EVENT.STATUS}* 
            üîîReconhecido: *{EVENT.ACK.STATUS}*
            üî• Severidade: *{EVENT.SEVERITY}*
        - event_source: DISCOVERY
          operation_mode: PROBLEM
          subject: 'Discovery: {DISCOVERY.DEVICE.STATUS} {DISCOVERY.DEVICE.IPADDRESS}'
          message: |
            Discovery rule: {DISCOVERY.RULE.NAME}
            
            Device IP: {DISCOVERY.DEVICE.IPADDRESS}
            Device DNS: {DISCOVERY.DEVICE.DNS}
            Device status: {DISCOVERY.DEVICE.STATUS}
            Device uptime: {DISCOVERY.DEVICE.UPTIME}
            
            Device service name: {DISCOVERY.SERVICE.NAME}
            Device service port: {DISCOVERY.SERVICE.PORT}
            Device service status: {DISCOVERY.SERVICE.STATUS}
            Device service uptime: {DISCOVERY.SERVICE.UPTIME}
        - event_source: AUTOREGISTRATION
          operation_mode: PROBLEM
          subject: 'Autoregistration: {HOST.HOST}'
          message: |
            Host name: {HOST.HOST}
            Host IP: {HOST.IP}
            Agent port: {HOST.PORT}
